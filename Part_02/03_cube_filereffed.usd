#usda 1.0
(
    defaultPrim = "Cube"
    upAxis = "Y"
)

def Xform "Cube" 
(
    variants = {
        string shadingVariant = "red"
    }
    prepend variantSets = "shadingVariant"
)
{
    def Mesh "cubeMesh"
    {   
        rel material:binding
        float3[] extent = [(-2, -2, -2), (2, 2, 2)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7, 0, 6, 5, 1, 4, 7, 3, 2, 0, 3, 7, 6, 4, 2, 1, 5]
        point3f[] points = [(1, 1, 1), (-1, 1, 1), (-1, -1, 1), (1, -1, 1), (-1, -1, -1), (-1, 1, -1), (1, 1, -1), (1, -1, -1)]
        uniform token subdivisionScheme = "none"
    }
 
    variantSet "shadingVariant" = {
        "blue" {
            over "cubeMesh"
            {
                #color3f[] primvars:displayColor = [(0, 0, 1)]
                rel material:binding = </_materials/exportedBlenderPurple>
            }
        }

        "green" {
            over "cubeMesh"
            {
                rel material:binding = </_materials/myFlatGreen>
                #color3f[] primvars:displayColor = [(0, 1, 0)]
            }
        }

        "red" {
            over "cubeMesh"
            {
                rel material:binding = </_materials/exportedApplePurple>
                #color3f[] primvars:displayColor = [(1, 0, 0)]
            }
        }
    }
}


def Scope "_materials"
{
    def Material "myFlatGreen"
        {
            token outputs:surface.connect = </_materials/myFlatGreen/PBRShader.outputs:surface>
            
            def Shader "PBRShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0, 1, 0)
                color3f inputs:emissiveColor = (0, 1, 0)
                float inputs:metallic = 0
                float inputs:roughness = 0.5
                int inputs:useSpecularWorkflow = 0
                token outputs:surface
            }
    }

    def Material "exportedBlenderPurple"
    {
        token outputs:surface.connect = </_materials/exportedBlenderPurple/previewShader.outputs:surface>

        def Shader "previewShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.8000001, 0.1429553, 0.52986294)
            float inputs:metallic = 0
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Material "exportedApplePurple"
    {
        token outputs:surface.connect = </_materials/exportedApplePurple/PBRShader.outputs:surface>

        def Shader "PBRShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.31854683, 0.033104762, 1)
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:metallic = 0
            float inputs:roughness = 0.55
            int inputs:useSpecularWorkflow = 0
            token outputs:surface
        }
    }
}