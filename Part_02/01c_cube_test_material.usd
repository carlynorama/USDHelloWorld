#usda 1.0
(
    defaultPrim = "Cube"
    upAxis = "Y"
)


def Xform "Cube"
{
    def Mesh "cubeMesh"
    {
        float3[] extent = [(-2, -2, -2), (2, 2, 2)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7, 0, 6, 5, 1, 4, 7, 3, 2, 0, 3, 7, 6, 4, 2, 1, 5]
        point3f[] points = [(1, 1, 1), (-1, 1, 1), (-1, -1, 1), (1, -1, 1), (-1, -1, -1), (-1, 1, -1), (1, 1, -1), (1, -1, -1)]
        rel material:binding = </myFlatGreen>
        uniform token subdivisionScheme = "none"
    }
}


def Material "myFlatGreen"
    {
        token outputs:surface.connect = </myFlatGreen/PBRShader.outputs:surface>
        
        def Shader "PBRShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0, 1, 0)
            color3f inputs:emissiveColor = (0, 1, 0)
            float inputs:metallic = 0
            float inputs:roughness = 0.5
            int inputs:useSpecularWorkflow = 0
            token outputs:surface
        }
}